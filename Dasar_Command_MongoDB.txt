Dasar-dasar MongoDB

isprastika@ubuntu:~$ mongod
2021-02-08T21:42:32.253-0800 I CONTROL  [initandlisten] MongoDB starting : pid=12900 port=27017 dbpath=/data/db 64-bit host=ubuntu
2021-02-08T21:42:32.253-0800 I CONTROL  [initandlisten] db version v3.6.22
2021-02-08T21:42:32.253-0800 I CONTROL  [initandlisten] git version: 62d9f36d148e4dacfec1ca8fcb110f1cc410336f
2021-02-08T21:42:32.253-0800 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.1.1f  31 Mar 2020
2021-02-08T21:42:32.253-0800 I CONTROL  [initandlisten] allocator: tcmalloc
2021-02-08T21:42:32.253-0800 I CONTROL  [initandlisten] modules: none
2021-02-08T21:42:32.253-0800 I CONTROL  [initandlisten] build environment:
2021-02-08T21:42:32.253-0800 I CONTROL  [initandlisten]     distmod: ubuntu1804
2021-02-08T21:42:32.253-0800 I CONTROL  [initandlisten]     distarch: x86_64
2021-02-08T21:42:32.253-0800 I CONTROL  [initandlisten]     target_arch: x86_64
2021-02-08T21:42:32.253-0800 I CONTROL  [initandlisten] options: {}
2021-02-08T21:42:32.334-0800 I STORAGE  [initandlisten] exception in initAndListen: NonExistentPath: Data directory /data/db not found. Create the missing directory or specify another path using (1) the --dbpath command line option, or (2) by adding the 'storage.dbPath' option in the configuration file., terminating
2021-02-08T21:42:32.337-0800 I CONTROL  [initandlisten] now exiting
2021-02-08T21:42:32.337-0800 I CONTROL  [initandlisten] shutting down with code:100
isprastika@ubuntu:~$ cd Downloads/
isprastika@ubuntu:~/Downloads$ mongod
2021-02-08T21:43:56.947-0800 I CONTROL  [initandlisten] MongoDB starting : pid=12924 port=27017 dbpath=/data/db 64-bit host=ubuntu
2021-02-08T21:43:56.947-0800 I CONTROL  [initandlisten] db version v3.6.22
2021-02-08T21:43:56.947-0800 I CONTROL  [initandlisten] git version: 62d9f36d148e4dacfec1ca8fcb110f1cc410336f
2021-02-08T21:43:56.947-0800 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.1.1f  31 Mar 2020
2021-02-08T21:43:56.947-0800 I CONTROL  [initandlisten] allocator: tcmalloc
2021-02-08T21:43:56.948-0800 I CONTROL  [initandlisten] modules: none
2021-02-08T21:43:56.948-0800 I CONTROL  [initandlisten] build environment:
2021-02-08T21:43:56.948-0800 I CONTROL  [initandlisten]     distmod: ubuntu1804
2021-02-08T21:43:56.948-0800 I CONTROL  [initandlisten]     distarch: x86_64
2021-02-08T21:43:56.948-0800 I CONTROL  [initandlisten]     target_arch: x86_64
2021-02-08T21:43:56.948-0800 I CONTROL  [initandlisten] options: {}
2021-02-08T21:43:56.948-0800 I STORAGE  [initandlisten] exception in initAndListen: NonExistentPath: Data directory /data/db not found. Create the missing directory or specify another path using (1) the --dbpath command line option, or (2) by adding the 'storage.dbPath' option in the configuration file., terminating
2021-02-08T21:43:56.948-0800 I CONTROL  [initandlisten] now exiting
2021-02-08T21:43:56.948-0800 I CONTROL  [initandlisten] shutting down with code:100
isprastika@ubuntu:~/Downloads$ history
    1  ls
    2  mongod
    3  cd Downloads/
    4  mongod
    5  history
isprastika@ubuntu:~/Downloads$ ls
code_1.53.0-1612368357_amd64.deb
mongodb-linux-x86_64-ubuntu1804-3.6.22
mongodb-linux-x86_64-ubuntu1804-3.6.22.tgz
packages.microsoft.gpg
isprastika@ubuntu:~/Downloads$ sudo cp mongodb-linux-x86_64-ubuntu1804-3.6.22/bin/* /usr/local/bin/
[sudo] password for isprastika: 
isprastika@ubuntu:~/Downloads$ sudo mkdir -p /var/lib/mongo
isprastika@ubuntu:~/Downloads$ sudo mkdir -p /var/log/mongodb
isprastika@ubuntu:~/Downloads$ sudo chown `whoami` /var/lib/mongo     # Or substitute another user
isprastika@ubuntu:~/Downloads$ sudo chown `whoami` /var/log/mongodb   # Or substitute another user
isprastika@ubuntu:~/Downloads$ sudo chown `whoami` /var/lib/mongo     # Or substitute another user
isprastika@ubuntu:~/Downloads$ sudo chown `whoami` /var/log/mongodb   # Or substitute another user
isprastika@ubuntu:~/Downloads$ mongod --dbpath /var/lib/mongo --logpath /var/log/mongodb/mongod.log --fork
about to fork child process, waiting until server is ready for connections.
forked process: 13205
child process started successfully, parent exiting
isprastika@ubuntu:~/Downloads$ mongod
2021-02-08T21:47:38.222-0800 I CONTROL  [initandlisten] MongoDB starting : pid=13233 port=27017 dbpath=/data/db 64-bit host=ubuntu
2021-02-08T21:47:38.911-0800 I CONTROL  [initandlisten] db version v3.6.22
2021-02-08T21:47:38.911-0800 I CONTROL  [initandlisten] git version: 62d9f36d148e4dacfec1ca8fcb110f1cc410336f
2021-02-08T21:47:38.911-0800 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.1.1f  31 Mar 2020
2021-02-08T21:47:38.911-0800 I CONTROL  [initandlisten] allocator: tcmalloc
2021-02-08T21:47:38.911-0800 I CONTROL  [initandlisten] modules: none
2021-02-08T21:47:38.911-0800 I CONTROL  [initandlisten] build environment:
2021-02-08T21:47:38.911-0800 I CONTROL  [initandlisten]     distmod: ubuntu1804
2021-02-08T21:47:38.911-0800 I CONTROL  [initandlisten]     distarch: x86_64
2021-02-08T21:47:38.911-0800 I CONTROL  [initandlisten]     target_arch: x86_64
2021-02-08T21:47:38.911-0800 I CONTROL  [initandlisten] options: {}
2021-02-08T21:47:39.300-0800 I STORAGE  [initandlisten] exception in initAndListen: NonExistentPath: Data directory /data/db not found. Create the missing directory or specify another path using (1) the --dbpath command line option, or (2) by adding the 'storage.dbPath' option in the configuration file., terminating
2021-02-08T21:47:39.300-0800 I CONTROL  [initandlisten] now exiting
2021-02-08T21:47:39.300-0800 I CONTROL  [initandlisten] shutting down with code:100
isprastika@ubuntu:~/Downloads$ mongo
MongoDB shell version v3.6.22
connecting to: mongodb://127.0.0.1:27017/?gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("ae8b8397-6aaf-4635-b090-b07254e02045") }
MongoDB server version: 3.6.22
Server has startup warnings: 
2021-02-08T21:47:14.421-0800 I STORAGE  [initandlisten] 
2021-02-08T21:47:14.421-0800 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
2021-02-08T21:47:14.421-0800 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
2021-02-08T21:47:18.521-0800 I CONTROL  [initandlisten] 
2021-02-08T21:47:18.521-0800 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2021-02-08T21:47:18.521-0800 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2021-02-08T21:47:18.521-0800 I CONTROL  [initandlisten] 
2021-02-08T21:47:18.521-0800 I CONTROL  [initandlisten] ** WARNING: This server is bound to localhost.
2021-02-08T21:47:18.521-0800 I CONTROL  [initandlisten] **          Remote systems will be unable to connect to this server. 
2021-02-08T21:47:18.521-0800 I CONTROL  [initandlisten] **          Start the server with --bind_ip <address> to specify which IP 
2021-02-08T21:47:18.521-0800 I CONTROL  [initandlisten] **          addresses it should serve responses from, or with --bind_ip_all to
2021-02-08T21:47:18.521-0800 I CONTROL  [initandlisten] **          bind to all interfaces. If this behavior is desired, start the
2021-02-08T21:47:18.521-0800 I CONTROL  [initandlisten] **          server with --bind_ip 127.0.0.1 to disable this warning.
2021-02-08T21:47:18.521-0800 I CONTROL  [initandlisten] 
> clear
2021-02-08T21:47:50.647-0800 E QUERY    [thread1] ReferenceError: clear is not defined :
@(shell):1:1
> clear
2021-02-08T21:48:15.330-0800 E QUERY    [thread1] ReferenceError: clear is not defined :
@(shell):1:1
> cls

> db
test
> use learning_mongo
switched to db learning_mongo
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
> db.cars.insert({"make":"Subaru"})
WriteResult({ "nInserted" : 1 })
> show dbs
admin           0.000GB
config          0.000GB
learning_mongo  0.000GB
local           0.000GB
> show collections
cars
> print("test")
test
> var arr=["one","two","three"]
> arr
[ "one", "two", "three" ]
> for (i=0;i<10000;i++){
... db.numbers.insert(
... {"number":i}
... )
... }
writeRWriteResult({ "nInserted" : 1 })
> writeResult({ "nInserted" : 1 })
2021-02-08T21:52:33.928-0800 E QUERY    [thread1] ReferenceError: writeResult is not defined :
@(shell):1:1
> 
> for (i=0;i<10000;i++){ db.numbers.insert( {"number":i} ) }
WriteResult({ "nWriteResult({ "nInserted" : 1 })
> WriteResult({ "nInserted" : 1 })
2021-02-08T21:52:59.535-0800 E QUERY    [thread1] TypeError: bulkResult.writeErrors is undefined :
WriteResult/this.getWriteError@src/mongo/shell/bulk_api.js:137:1
WriteResult/this.tojson@src/mongo/shell/bulk_api.js:186:17
WriteResult/this.toString@src/mongo/shell/bulk_api.js:204:37
WriteResult/this.shellPrint@src/mongo/shell/bulk_api.js:208:20
shellPrintHelper@src/mongo/shell/utils.js:589:1
@(shell2):1:1
> db.numbers.count()
20000
> for (i=0;i<10000;i++){ db.numbers.insert({"number":i} )}
WriteResult({ "nIWriteResult({ "nInserted" : 1 })
> WriteResult({ "nInserted" : 1 })
2021-02-08T21:54:49.398-0800 E QUERY    [thread1] TypeError: bulkResult.writeErrors is undefined :
WriteResult/this.getWriteError@src/mongo/shell/bulk_api.js:137:1
WriteResult/this.tojson@src/mongo/shell/bulk_api.js:186:17
WriteResult/this.toString@src/mongo/shell/bulk_api.js:204:37
WriteResult/this.shellPrint@src/mongo/shell/bulk_api.js:208:20
shellPrintHelper@src/mongo/shell/utils.js:589:1
@(shell2):1:1
> db.numbers.count()
30000
> db.numbers.find({"number":1})
{ "_id" : ObjectId("60222300b0293108123044d3"), "number" : 1 }
{ "_id" : ObjectId("60222328b029310812306be3"), "number" : 1 }
{ "_id" : ObjectId("60222394b0293108123092f3"), "number" : 1 }
> db.numbers.find({"number":1}).explain()
{
	"queryPlanner" : {
		"plannerVersion" : 1,
		"namespace" : "learning_mongo.numbers",
		"indexFilterSet" : false,
		"parsedQuery" : {
			"number" : {
				"$eq" : 1
			}
		},
		"winningPlan" : {
			"stage" : "COLLSCAN",
			"filter" : {
				"number" : {
					"$eq" : 1
				}
			},
			"direction" : "forward"
		},
		"rejectedPlans" : [ ]
	},
	"serverInfo" : {
		"host" : "ubuntu",
		"port" : 27017,
		"version" : "3.6.22",
		"gitVersion" : "62d9f36d148e4dacfec1ca8fcb110f1cc410336f"
	},
	"ok" : 1
}
> db.numbers.find({"number":1}).explain("executionStats")
{
	"queryPlanner" : {
		"plannerVersion" : 1,
		"namespace" : "learning_mongo.numbers",
		"indexFilterSet" : false,
		"parsedQuery" : {
			"number" : {
				"$eq" : 1
			}
		},
		"winningPlan" : {
			"stage" : "COLLSCAN",
			"filter" : {
				"number" : {
					"$eq" : 1
				}
			},
			"direction" : "forward"
		},
		"rejectedPlans" : [ ]
	},
	"executionStats" : {
		"executionSuccess" : true,
		"nReturned" : 3,
		"executionTimeMillis" : 97,
		"totalKeysExamined" : 0,
		"totalDocsExamined" : 30000,
		"executionStages" : {
			"stage" : "COLLSCAN",
			"filter" : {
				"number" : {
					"$eq" : 1
				}
			},
			"nReturned" : 3,
			"executionTimeMillisEstimate" : 86,
			"works" : 30002,
			"advanced" : 3,
			"needTime" : 29998,
			"needYield" : 0,
			"saveState" : 236,
			"restoreState" : 236,
			"isEOF" : 1,
			"invalidates" : 0,
			"direction" : "forward",
			"docsExamined" : 30000
		}
	},
	"serverInfo" : {
		"host" : "ubuntu",
		"port" : 27017,
		"version" : "3.6.22",
		"gitVersion" : "62d9f36d148e4dacfec1ca8fcb110f1cc410336f"
	},
	"ok" : 1
}
> db.numbers.createIndex({number:1})
{
	"createdCollectionAutomatically" : false,
	"numIndexesBefore" : 1,
	"numIndexesAfter" : 2,
	"ok" : 1
}
> db.numbers.find({"number":1}).explain("executionStats")
{
	"queryPlanner" : {
		"plannerVersion" : 1,
		"namespace" : "learning_mongo.numbers",
		"indexFilterSet" : false,
		"parsedQuery" : {
			"number" : {
				"$eq" : 1
			}
		},
		"winningPlan" : {
			"stage" : "FETCH",
			"inputStage" : {
				"stage" : "IXSCAN",
				"keyPattern" : {
					"number" : 1
				},
				"indexName" : "number_1",
				"isMultiKey" : false,
				"multiKeyPaths" : {
					"number" : [ ]
				},
				"isUnique" : false,
				"isSparse" : false,
				"isPartial" : false,
				"indexVersion" : 2,
				"direction" : "forward",
				"indexBounds" : {
					"number" : [
						"[1.0, 1.0]"
					]
				}
			}
		},
		"rejectedPlans" : [ ]
	},
	"executionStats" : {
		"executionSuccess" : true,
		"nReturned" : 3,
		"executionTimeMillis" : 3,
		"totalKeysExamined" : 3,
		"totalDocsExamined" : 3,
		"executionStages" : {
			"stage" : "FETCH",
			"nReturned" : 3,
			"executionTimeMillisEstimate" : 0,
			"works" : 4,
			"advanced" : 3,
			"needTime" : 0,
			"needYield" : 0,
			"saveState" : 0,
			"restoreState" : 0,
			"isEOF" : 1,
			"invalidates" : 0,
			"docsExamined" : 3,
			"alreadyHasObj" : 0,
			"inputStage" : {
				"stage" : "IXSCAN",
				"nReturned" : 3,
				"executionTimeMillisEstimate" : 0,
				"works" : 4,
				"advanced" : 3,
				"needTime" : 0,
				"needYield" : 0,
				"saveState" : 0,
				"restoreState" : 0,
				"isEOF" : 1,
				"invalidates" : 0,
				"keyPattern" : {
					"number" : 1
				},
				"indexName" : "number_1",
				"isMultiKey" : false,
				"multiKeyPaths" : {
					"number" : [ ]
				},
				"isUnique" : false,
				"isSparse" : false,
				"isPartial" : false,
				"indexVersion" : 2,
				"direction" : "forward",
				"indexBounds" : {
					"number" : [
						"[1.0, 1.0]"
					]
				},
				"keysExamined" : 3,
				"seeks" : 1,
				"dupsTested" : 0,
				"dupsDropped" : 0,
				"seenInvalidated" : 0
			}
		}
	},
	"serverInfo" : {
		"host" : "ubuntu",
		"port" : 27017,
		"version" : "3.6.22",
		"gitVersion" : "62d9f36d148e4dacfec1ca8fcb110f1cc410336f"
	},
	"ok" : 1
}
> 
